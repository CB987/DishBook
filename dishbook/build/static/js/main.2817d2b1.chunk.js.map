{"version":3,"sources":["images/canada-country.png","images/china-country.png","images/england-country.png","images/france-country.png","images/india.png","images/japan.png","images/Mexico.png","images/morocco.png","images/spain.png","images/thailand.png","images/vietnam.png","images/UnitedStates.jpg","FlagCountry.js","ListOfRecipes.js","Instructions.js","Counters.js","RecipePage.js","YumWorld.js","index.js"],"names":["module","exports","__webpack_require__","p","FlagCountry","props","theListOfCountry","countryFlags","map","country","theCountry","theFlag","flag","theNationality","nationality","react_default","a","createElement","Link","to","concat","className","alt","src","ListOfRecipes","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","recipes","_this2","countryName","match","params","fetch","then","r","json","recipe","setState","meals","listOfRecipes","id","idMeal","strMeal","strMealThumb","Component","Instructions","ingredient","food","measurement","amount","instruction","instructions","URL","sourceURL","ingredientList","amountList","href","target","console","log","theURL","Counters","onClick","_LikeMe","likes","_DislikeMe","unlikes","RecipePage","_handleLike","_handleUnlike","recipeImage","recipeTitle","parseInt","Math","random","toFixed","ingredients","measurements","results","data","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strIngredient7","strIngredient8","strIngredient9","strIngredient10","strIngredient11","strIngredient12","strIngredient13","strIngredient14","strIngredient15","strIngredient16","strIngredient17","strIngredient18","strIngredient19","strIngredient20","strMeasure1","strMeasure2","strMeasure3","strMeasure4","strMeasure5","strMeasure6","strMeasure7","strMeasure8","strMeasure9","strMeasure10","strMeasure11","strMeasure12","strMeasure13","strMeasure14","strMeasure15","strMeasure16","strMeasure17","strMeasure18","strMeasure19","strMeasure20","strInstructions","strSource","_React$createElement","src_Counters","src_Instructions","const","defineProperty","React","YumWorld","countries","Canada","China","England","France","India","Japan","Mexico","Morocco","Spain","Thailand","Vietnam","UnitedStates","BrowserRouter","Route","path","exact","render","src_FlagCountry","assign","src_ListOfRecipes","src_RecipePage","App","src_YumWorld","ReactDOM","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.2817d2b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/canada-country.20c34e61.png\";","module.exports = __webpack_public_path__ + \"static/media/china-country.b2a33eb5.png\";","module.exports = __webpack_public_path__ + \"static/media/england-country.518b5cac.png\";","module.exports = __webpack_public_path__ + \"static/media/france-country.b2139410.png\";","module.exports = __webpack_public_path__ + \"static/media/india.25a11a28.png\";","module.exports = __webpack_public_path__ + \"static/media/japan.66e0eee3.png\";","module.exports = __webpack_public_path__ + \"static/media/Mexico.6d618cd2.png\";","module.exports = __webpack_public_path__ + \"static/media/morocco.67f085ed.png\";","module.exports = __webpack_public_path__ + \"static/media/spain.f9885729.png\";","module.exports = __webpack_public_path__ + \"static/media/thailand.6dc6970e.png\";","module.exports = __webpack_public_path__ + \"static/media/vietnam.c77e0877.png\";","module.exports = __webpack_public_path__ + \"static/media/UnitedStates.71707f58.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport index from './stylesheet/index.css';\n\n\nconst FlagCountry = (props) => {\n    const arrayOfList = props.countryFlags\n    const theListOfCountry = arrayOfList.map((country) => {\n        const theCountry = country.country;\n        const theFlag = country.flag;\n        const theNationality = country.nationality;\n        // const recipeList = country.recipe;\n\n        return (\n            <Link to={`/${theNationality}`}>\n                <div className=\"images\">\n                    {/* <img className = \"flagImages\" alt = {theCountry} src = {theFlag}/> */}\n                    <figure>\n                        <img className=\"flagImages\" alt={theCountry} src={theFlag} />\n                        <figcaption>\n                            {theCountry}\n                        </figcaption>\n                    </figure>\n                </div>\n            </Link>\n        )\n    });\n\n    return (\n        <div className=\"countryImages\">\n            <div className=\"country-title-container\">\n                <h1>Welcome to Dishbook!</h1>\n                <h2>Where would you like to eat?</h2>\n            </div>\n            <div className=\"country-image-container\">\n                {theListOfCountry}\n            </div>\n        </div>\n    );\n}\n\nexport default FlagCountry;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ListOfRecipes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            recipes: []\n        }\n    }\n\n    componentDidMount() {\n        const countryName = this.props.match.params.country;\n        fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${countryName}`)\n            .then(r => r.json())\n            .then(recipe => {\n                this.setState({\n                    recipes: recipe.meals\n                });\n            })\n    }\n\n    render() {\n        const countryName = this.props.match.params.country;\n        const listOfRecipes = this.state.recipes.map(recipe => {\n            const id = recipe.idMeal;\n\n            return (\n                <Link to={`/${countryName}/${recipe.strMeal}/${id}`}>\n                    <div className=\"images\">\n                        <figure>\n                            <img className=\"food-images\" src={recipe.strMealThumb} alt={recipe.strMeal} />\n                            <figcaption>\n                                {recipe.strMeal}\n                            </figcaption>\n                        </figure>\n                    </div>\n                </Link>\n\n            )\n        })\n\n        return (\n            <div className=\"recipeImages\">\n                <div className=\"recipe-title-container\">\n                    <h1>{this.props.match.params.country} food, great choice!</h1>\n                    <h2>Select one of these mouthwatering dishes!</h2>\n                </div>\n                <div className=\"recipe-image-container\">\n                    {listOfRecipes}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListOfRecipes;","import React from 'react';\n\nconst Instructions = (props) => {\n    const ingredient = props.food;\n    const measurement = props.amount;\n    const instruction = props.instructions;\n    const URL = props.sourceURL;\n    \n    const ingredientList = ingredient.map(ingredient => {\n        if (ingredient !== \"\") {\n            return (\n                <li>{ingredient}</li>\n            )\n        }\n    })\n\n    const amountList = measurement.map(measurement => {\n        if (measurement !== '') {\n            return (\n                <li>{measurement}</li>\n            )\n        }\n    })\n    \n    const theURL = (URL) =>{\n        if(URL !== \"\"){\n            return(\n                <p className=\"website-link\">Original recipe from: <a href={URL} target=\"blank\">{URL}</a></p>\n            )\n        }else{\n            console.log('url not there');\n        }\n    }\n\n    return (\n        <div className=\"full-recipe-text\">\n            <h3>Ingredients</h3>\n            <div className=\"ingredients-container\">\n                <ul className=\"ingredients-list\">\n                    {amountList}\n                </ul>\n                <ul className=\"ingredients-list\">\n                    {ingredientList}\n                </ul>\n            </div>\n            <br></br>\n            <h3>Instructions</h3>\n            <p className=\"instructions\">{instruction}</p>\n            <br></br>\n            {theURL(URL)}\n        </div >\n    )\n};\n\nexport default Instructions;","import React from 'react';\n\nconst Counters = (props) => {\n    return (\n        <div>\n            <button className=\"button1\" onClick={() => { props._LikeMe() }}>Likes: {props.likes}</button>\n\n            <button className=\"button2\" onClick={() => { props._DislikeMe() }}>Dislikes: {props.unlikes}</button>\n\n        </div>\n\n    )\n}\n\nexport default Counters;","import React from 'react';\n\nimport Instructions from './Instructions';\nimport Counters from './Counters';\n\nclass RecipePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            recipeImage: \"\",\n            recipeTitle: \"\",\n            likes: parseInt((Math.random() * (100)).toFixed(0)),\n            unlikes: parseInt((Math.random() * (-100)).toFixed(0)),\n            ingredients: [],\n            measurements: [],\n            instructions: \"\",\n            sourceURL: \"\"\n        };\n    }\n\n    componentDidMount() {\n        const id = this.props.match.params.id\n        fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`)\n            .then(results => {\n                return results.json();\n            })\n            .then(data => {\n                // console.log(data)\n                this.setState({\n                    id: data.meals[0].idMeal,\n                    recipeImage: data.meals[0].strMealThumb,\n                    recipeTitle: data.meals[0].strMeal,\n                    ingredients: [\n                        data.meals[0].strIngredient1,\n                        data.meals[0].strIngredient2,\n                        data.meals[0].strIngredient3,\n                        data.meals[0].strIngredient4,\n                        data.meals[0].strIngredient5,\n                        data.meals[0].strIngredient6,\n                        data.meals[0].strIngredient7,\n                        data.meals[0].strIngredient8,\n                        data.meals[0].strIngredient9,\n                        data.meals[0].strIngredient10,\n                        data.meals[0].strIngredient11,\n                        data.meals[0].strIngredient12,\n                        data.meals[0].strIngredient13,\n                        data.meals[0].strIngredient14,\n                        data.meals[0].strIngredient15,\n                        data.meals[0].strIngredient16,\n                        data.meals[0].strIngredient17,\n                        data.meals[0].strIngredient18,\n                        data.meals[0].strIngredient19,\n                        data.meals[0].strIngredient20,\n                    ],\n                    measurements: [\n                        data.meals[0].strMeasure1,\n                        data.meals[0].strMeasure2,\n                        data.meals[0].strMeasure3,\n                        data.meals[0].strMeasure4,\n                        data.meals[0].strMeasure5,\n                        data.meals[0].strMeasure6,\n                        data.meals[0].strMeasure7,\n                        data.meals[0].strMeasure8,\n                        data.meals[0].strMeasure9,\n                        data.meals[0].strMeasure10,\n                        data.meals[0].strMeasure11,\n                        data.meals[0].strMeasure12,\n                        data.meals[0].strMeasure13,\n                        data.meals[0].strMeasure14,\n                        data.meals[0].strMeasure15,\n                        data.meals[0].strMeasure16,\n                        data.meals[0].strMeasure17,\n                        data.meals[0].strMeasure18,\n                        data.meals[0].strMeasure19,\n                        data.meals[0].strMeasure20,\n                    ],\n                    instructions: data.meals[0].strInstructions,\n                    sourceURL: data.meals[0].strSource\n                })\n            })\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"recipe-header\">\n                    <img className=\"flagImages\" src={this.state.recipeImage} alt={this.state.recipeTitle} />\n                    <div className=\"title-likes\">   \n                        <h1>{this.state.recipeTitle}</h1>\n                        <Counters\n                            _LikeMe={this._handleLike}\n                            likes={this.state.likes}\n                            _DislikeMe={this._handleUnlike}\n                            unlikes={this.state.unlikes}\n                        />\n                    </div>\n                </div>\n                <Instructions\n                    const food={this.state.ingredients}\n                    const amount={this.state.measurements}\n                    const instructions = {this.state.instructions}\n                    const sourceURL = {this.state.sourceURL}\n                    const id = {this.state.id}\n                />\n            </div >\n        )\n    };\n\n    _handleLike = () => {\n        this.setState({\n            likes: (this.state.likes + 1)\n        })\n    };\n\n    _handleUnlike = () => {\n        this.setState({\n            unlikes: (this.state.unlikes - 1)\n        })\n    };\n};\n\n\nexport default RecipePage;","import React, { Component } from 'react';\nimport {\n    BrowserRouter as Router,\n    Route\n} from 'react-router-dom';\n\nimport FlagCountry from './FlagCountry';\nimport ListOfRecipes from './ListOfRecipes';\nimport RecipePage from './RecipePage';\n\nimport Canada from './images/canada-country.png';\nimport China from './images/china-country.png';\nimport England from './images/england-country.png';\nimport France from './images/france-country.png';\nimport India from './images/india.png';\nimport Japan from './images/japan.png';\nimport Mexico from './images/Mexico.png';\nimport Morocco from './images/morocco.png';\nimport Spain from './images/spain.png';\nimport Thailand from './images/thailand.png';\nimport Vietnam from './images/vietnam.png';\nimport UnitedStates from './images/UnitedStates.jpg';\n\n\nclass YumWorld extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            countries: [\n                {\n                    country: 'Canada',\n                    flag: Canada,\n                    recipe: [],\n                    nationality: 'Canadian'\n                },\n                {\n                    country: 'China',\n                    flag: China,\n                    recipe: [],\n                    nationality: 'Chinese'\n                },\n                {\n                    country: 'UnitedKingdom',\n                    flag: England,\n                    recipe: [],\n                    nationality: 'British'\n                },\n                {\n                    country: 'France',\n                    flag: France,\n                    recipe: [],\n                    nationality: 'French'\n                },\n                {\n                    country: 'India',\n                    flag: India,\n                    recipe: [],\n                    nationality: 'Indian'\n                },\n                {\n                    country: 'Japan',\n                    flag: Japan,\n                    recipe: [],\n                    nationality: 'Japanese'\n                },\n                {\n                    country: 'Mexico',\n                    flag: Mexico,\n                    recipe: [],\n                    nationality: 'Mexican'\n                },\n                {\n                    country: 'Morocco',\n                    flag: Morocco,\n                    recipe: [],\n                    nationality: 'Moroccan'\n                },\n                {\n                    country: 'Spain',\n                    flag: Spain,\n                    recipe: [],\n                    nationality: 'Spanish'\n                },\n                {\n                    country: 'Thailand',\n                    flag: Thailand,\n                    recipe: [],\n                    nationality: 'Thai'\n                },\n                {\n                    country: 'Vietnam',\n                    flag: Vietnam,\n                    recipe: [],\n                    nationality: 'Vietnamese'\n                },\n                {\n                    country: 'UnitedStates',\n                    flag: UnitedStates,\n                    recipe: [],\n                    nationality: 'American'\n                }\n            ]\n\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Route path=\"/\" exact render={(props) => {\n                        return (\n                            <FlagCountry\n                                countryFlags={this.state.countries}\n                                {...props}\n                            />)\n                    }} />\n                    <Route path=\"/:country\" exact render={(props) => {\n                        return (\n                            <ListOfRecipes\n                                nationality={this.state.countries}\n                                {...props}\n                            />)\n                    }} />\n                    <Route path=\"/:country/:dish/:id\" exact render={(props) => {\n                        return (\n                            <RecipePage\n                                recipes={this.state.recipe}\n                                {...props}\n                            />)\n                    }} />\n                    {/* <Route path=\"/:country/:dish */}\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default YumWorld;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport YumWorld from './YumWorld';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div>\n                <YumWorld />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App></App>, document.querySelector('#root'));"],"sourceRoot":""}